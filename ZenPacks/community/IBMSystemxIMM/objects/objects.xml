<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'Server', 'IMM') -->
<object id='/zport/dmd/Devices/Server/IMM' module='Products.ZenModel.DeviceClass' class='DeviceClass'>
<property id='zendoc' type='string'>
Integrated Management Module
</property>
<property type="string" id="description" mode="w" >
Integrated Management Module
</property>
<property visible="True" type="lines" id="zCollectorPlugins" >
['zenoss.snmp.NewDeviceMap', 'zenoss.snmp.DeviceMap', 'community.snmp.IBMIMMDeviceMap', 'community.snmp.IBMIMMFwVpdMap', 'community.snmp.IBMIMMCpuVpdMap', 'community.snmp.IBMIMMMemVpdMap', 'community.snmp.IBMIMMComponentLogMap', 'community.snmp.IBMIMMComponentVpdMap', 'community.snmp.IBMIMMFanMonMap', 'community.snmp.IBMIMMVoltMonMap']
</property>
<property visible="True" type="float" id="zSnmpTimeout" >
10.0
</property>
<property visible="True" type="string" id="zPythonClass" >
ZenPacks.community.IBMSystemxIMM.IMMDevice
</property>
<property visible="True" type="lines" id="zDeviceTemplates" >
['Device', 'IMMAmbientTemp']
</property>
<tomanycont id='rrdTemplates'>
<object id='IMMAmbientTemp' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='tempReadingAmbient' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
.1.3.6.1.4.1.2.3.51.3.1.1.2.1.3.1
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='tempReadingAmbient' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Chassis Temperature' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Degrees Celsius
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='tempReadingAmbient' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
AREA
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
tempReadingAmbient_tempReadingAmbient
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='IMMFanMon' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='fanSpeed' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
COMMAND
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="component" mode="w" >
fanSpeed
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="string" id="commandTemplate" mode="w" >
/usr/bin/snmpget -Oqv -v1 -c${device/zSnmpCommunity} ${device/manageIp} 1.3.6.1.4.1.2.3.51.3.1.3.2.1.3.${here/snmpindex} | sed -e 's/[^0-9]//g' -e 's/^/Fan speed | fanSpeed=/'
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='fanSpeed' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='System Fans' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Fan Speed (%)
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='fanSpeed' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
fanSpeed_fanSpeed
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<object id='IMMVoltMon' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
Products.ZenModel.Device
</property>
<tomanycont id='datasources'>
<object id='voltReading' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
.1.3.6.1.4.1.2.3.51.3.1.2.2.1.3
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='voltReading' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='System Voltages' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Volts
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<tomanycont id='graphPoints'>
<object id='voltReading' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1000,/
</property>
<property type="string" id="dpName" mode="w" >
voltReading_voltReading
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'IMM') -->
<object id='/zport/dmd/Events/IMM' module='Products.ZenEvents.EventClass' class='EventClass'>
<property id='zendoc' type='string'>
Events from an IBM Integrated Management Module
</property>
<property type="string" id="description" mode="w" >
Events from an IBM Integrated Management Module
</property>
<tomanycont id='instances'>
<object id='ibmSpTrapAppS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapAppS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapBootS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapBootS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapCPUC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapCPUC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapCPUN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapCPUN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapFanC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapFanC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapFanN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapFanN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapHardwareC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapHardwareC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapHardwareN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapHardwareN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapHdC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapHdC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapIhcC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapIhcC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapLdrToS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapLdrToS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapMemoryC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapMemoryC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapMemoryN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapMemoryN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapNwChangeS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapNwChangeS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapOsToS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapOsToS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapPFAS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapPFAS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapPoffS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapPoffS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapPonS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapPonS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapPowerC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapPowerC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapPowerN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapPowerN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapRLogin' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapRLogin
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapRdpsC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapRdpsC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapRdpsN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapRdpsN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapSysLogS' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapSysLogS
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapTempC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapTempC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapTempN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapTempN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapVoltC' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapVoltC
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
<object id='ibmSpTrapVoltN' module='Products.ZenEvents.EventClassInst' class='EventClassInst'>
<property type="text" id="transform" mode="w" >
evt.summary = evt.altMsgText + " (" + evt.eventClassKey + ")"

if evt.altPriority == 0:  evt.severity = 5
elif evt.altPriority == 2: evt.severity = 3
elif evt.altPriority == 4: evt.severity = 2
elif evt.altPriority == 8: evt.severity = 0
else: evt.severity = 4
</property>
<property type="string" id="eventClassKey" mode="w" >
ibmSpTrapVoltN
</property>
<property type="int" id="sequence" mode="w" >
7
</property>
</object>
</tomanycont>
</object>
</objects>
